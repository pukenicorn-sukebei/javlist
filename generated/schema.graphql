### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Person {
  aliases: [PersonAlias!]!
  id: ID!
  starred: [Video!]!
}

type PersonAlias {
  alias: String!
}

type Query {
  video(code: String!): Video!
  videos(codes: [String!], numberPerPage: Int = 25, page: Int = 1): [Video!]!
  videosByTags(tags: [String!]!): [Video!]!
}

type Video {
  actors: [Person!]!
  code: String!
  cover: String
  createdAt: DateTime!
  directors: [Person!]!
  id: ID!
  label: VideoLabel!
  length: Int!
  maker: VideoMaker!
  name: String
  releaseDate: DateTime
  tags: [VideoTag!]!
  updatedAt: DateTime!
}

type VideoLabel {
  id: ID!
  name: String!
  videos: [Video!]!
}

type VideoMaker {
  id: ID!
  name: String!
  videos: [Video!]!
}

type VideoTag {
  id: ID!
  name: String!
  videos: [Video!]!
}